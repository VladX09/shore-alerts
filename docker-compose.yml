version: '2.4'
x-network:
  &network
  networks:
    - shore

x-debug:
  &debug
  DEBUG: "${DEBUG:-True}"

x-ebay:
  &ebay
  EBAY_APP_ID: "${EBAY_APP_ID:?}"
  EBAY_CERT_ID: "${EBAY_CERT_ID:?}"
  EBAY_API_URL: "${EBAY_API_URL:?}"

x-email:
  &email
  EMAIL_HOST: "${EMAIL_HOST:?}"
  EMAIL_PORT: "${EMAIL_PORT:?}"
  EMAIL_HOST_USER: "${EMAIL_HOST_USER:?}"
  EMAIL_HOST_PASSWORD: "${EMAIL_HOST_PASSWORD:?}"
  SENDER_EMAIL: "${SENDER_EMAIL:?}"

x-django-superuser:
  &django-superuser
  DJANGO_SUPERUSER_USERNAME: "admin"
  DJANGO_SUPERUSER_EMAIL: "admin@admin.com"
  DJANGO_SUPERUSER_PASSWORD: "admin"

x-alerts-db:
  &alerts-db
  DB_NAME: "alerts"
  DB_USER: "alerts"
  DB_PASSWORD: "alerts"

x-alerts-image:
  &alerts-image
  build:
    context: .
    dockerfile: ./alerts/Dockerfile
  volumes:
    - ./alerts:/code

x-insights-image:
  &insights-image
  build:
    context: .
    dockerfile: ./insights/Dockerfile
  volumes:
    - ./insights:/code

services:
  alerts:
    <<: *network
    <<: *alerts-image
    command: "start"
    ports:
      - 8080:8080
    depends_on:
      postgres:
        condition: service_started
      redis:
        condition: service_started
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8080/admin" ]
      interval: 10s
      timeout: 10s
      retries: 3
      start_period: 30s
    environment:
      <<: *alerts-db
      <<: *django-superuser
      <<: *debug

  postgres:
    <<: *network
    build:
      context: .
      dockerfile: ./db/Dockerfile
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready" ]
      interval: 10s
      timeout: 10s
      retries: 3
      start_period: 30s
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres

  redis:
    <<: *network
    image: redis:6-alpine

  alerts-worker:
    <<: *network
    <<: *alerts-image
    command: "celery -A alerts worker --loglevel=DEBUG"
    depends_on:
      - alerts-beat
    environment:
      <<: *alerts-db
      <<: *email
      <<: *debug
      <<: *ebay

  alerts-beat:
    <<: *network
    <<: *alerts-image
    command: "celery -A alerts beat --loglevel=INFO"
    depends_on:
      alerts:
        condition: service_healthy
    environment:
      <<: *alerts-db
      <<: *debug
  price-decrease-insight:
    <<: *network
    <<: *insights-image
    command: "start --schedule * * 2 * *"
    depends_on:
      alerts:
        condition: service_healthy
    environment:
      <<: *email
      <<: *debug

networks:
  shore:
    external: true
